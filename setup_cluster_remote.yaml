- name: Deploy Kubernetes resources
  hosts: host_list #localhost
  # connection: local 
  become: true
  tasks:

    - name: Run "apt-get update".
      apt:
        update_cache: true

    - name: Install required system packages.
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest

    - name: Add Docker's official GPG key.
      shell:
        cmd: |
          sudo install -m 0755 -d /etc/apt/keyrings
          sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
          sudo chmod a+r /etc/apt/keyrings/docker.asc

    - name: Add the docker repository to apt sources.
      shell:
        cmd: |
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
    - name: Install docker.
      apt:
        name: 
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: latest
  
    - name: Download the public signing key for the Kubernetes package repositories.
      shell:
        cmd: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key | sudo gpg --yes --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add the appropriate Kubernetes apt repository
      shell:
        cmd: echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list
    
    - name: Run "apt-get update".
      apt:
        update_cache: true
        
    - name: Install kubectl
      apt:
        name: kubectl 

    - name: Create kind cluster
      command: kind create cluster --config /home/test/mlplatform_k8s/kind_ingress_cluster.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s

    - name: Apply minio deployment
      command: kubectl apply -f minio-deployment.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s

    - name: Apply minio service
      command: kubectl apply -f minio-service.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s

    - name: Apply mLflow deployment
      command: kubectl apply -f mlflow-deployment.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s

    - name: Apply mLflow service
      command: kubectl apply -f mlflow-service.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s

    - name: Apply jupyterHub deployment
      command: kubectl apply -f jupyterhub-deployment.yaml
      become: true
      args:
        chdir: /home/test/mlplatform_k8s


